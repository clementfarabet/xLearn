Torch+xLearn Installation Manual

#InstallSources

=Torch5= is mainly made out of =ANSI C= and =Lua=, which makes it easy to
compile everywhere. The graphical interface is now based on QT and requires
a =C++= compiler.

You will find here step-by-step instructions for each system we are supporting.

=xLearn= note: the original [[http://torch5.sourceforge.net/][=Torch5=]] 
package can be installed and run natively on
MacOS, Linux and Windows. Lots of packages provided with =xLearn= require Posix or
Linux libs (camera, hardware interfaces for =neuFlow=, ...), and therefore support 
for Windows was dropped. If Windows is your platform, please refer to the original
=Torch5= installation documentation. Most of our packages can then be added as
=contrib= packages in the original =Torch5= repo.

First get the sources from our 
[[https://github.com/clementfarabet/xLearn][public GitHub repository]]:
<verbatim>
$ git clone https://github.com/clementfarabet/xLearn.git
</verbatim>

---+ Linux

*A. Requirements*

Compilation requires a number of standard packages described below:
   * *Mandatory:*
      * A =C/C++= compiler ([[http://gcc.gnu.org][GNU compiler]] or Intel compiler work fine)
      * [[http://www.cmake.org][=CMake=]]

   * *Almost Mandatory:*
      * [[http://tiswww.case.edu/php/chet/readline/rltop.html][GNU Readline]]
      * [[http://trolltech.com/products][QT 4.4]] or newer development libraries

   * *Recommended:*
      * CBLAS. Intel MKL library is recommended for that purpose on Intel computers.
      * [[http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.1/][OpenCV]]

The installation of most of these packages should be rather straightforward. For =Debian=
based systems we use the =apt-get= magic:
<verbatim>
apt-get install gcc g++
apt-get install cmake
apt-get install libreadline5-dev
apt-get install subversion
</verbatim>
Please adapt according to your distribution.

Note: readline library is helpful for better command line interaction, but it is not required.

Note: while CMake 2.4.7 or newer will (kind of) work, we like to use CMake
2.6 which is _much_ less buggy. CMake installation is easy and fast from the
sources available on [[http://www.cmake.org][CMake website]]. Follow their
instructions for that purpose.

We require =QT 4.4= for handling graphics (_beware_ not installing QT 4.3
or older). If it is not found at compile time, Torch will still compile but
no graphics will be available.  On recent Debian distribution you can
install it with
<verbatim>
apt-get install libqt4-core libqt4-gui libqt4-dev
</verbatim>
If QT 4.4 is not available on your system you should follow our additional
[[InstallQTDebian.hlp][instructions for QT 4.4]].

CBLAS installation is also recommended for speed. If not found, Torch will rely on hand-made linear algebra routines.
Debian distribution provide CBLAS through the =refblas= package:
<verbatim>
apt-get install refblas3-dev
</verbatim>
Ultimate speed is achieved using the Intel MKL library. We support at the time only MKL 9, as we get
weird runtime errors with MKL 10. Follow Intel instruction to unpack MKL. Then make sure the libraries
relevant for your system (e.g. =em64t= if you are on a 64 bits distribution) are available in your =LD_LIBRARY_PATH=.

Finally, for interfacing with =neuFlow=, [[http://www.tcpdump.org/][libpcap]] 
is currently required (only for Linux systems):
<verbatim>
apt-get install libpcap-dev
</verbatim>

*B. Compiling and installing*

Compiling the entire =xLearn= framework, including =Lua=, =Torch5= and most 
packages is simply done with:
<verbatim>
make
</verbatim>
and then installed with:
<verbatim>
make install
</verbatim>
This last command might possibly be prefixed by =sudo= if you are
installing Torch in =/usr/local=.

To get all the details on how to activate/deactivate optional packages:
<verbatim>
make help
</verbatim>

In particular, if you're not root, you can install everything locally:
<verbatim>
make INSTALL_PREFIX=~/path/to/local install
</verbatim>

One last thing, for Linux only, you can replace Lua by the more efficient LuaJIT, 
which we re-distribute here:
<verbatim>
make clean
make INSTALL_PREFIX=~/path/to/local USE_LUAJIT=1 install
</verbatim>
(This is still beta, but so far has been working great for us, with speeds up of up
to 10x for certains things !!)

*C. Running*

Now Lua+Torch+xLearn should be installed in =/usr/local= or in =/my/install/path= if
you chose to use the =INSTALL_PREFIX= when installing.
Lua executables (=lua=, =qlua= and =luaX=) are found in the =bin= sub-directory of
these installation directories.
<verbatim>
/usr/local/bin/lua
Lua 5.1.3  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> require 'torch'
> = torch.Tensor(5):zero()

0
0
0
0
0
[torch.Tensor of dimension 5]

> 
</verbatim>
For convenience, you might want to add to your =PATH= the path to lua
binaries. The executable =lua= is a simple Lua interpreter (as provided on
[[http://www.lua.org][Lua website]]), while =qlua= has enhanced
interactivity (like completion) and is able to handle graphics and QT
widgets. =luaX= is a full-blown matlab-like environment, with viewable
variable space, nice console, and editing facilities.

---+ MacOS X

*A. Requirements*

Torch compilation requires a number of standard packages described below:
   * *Mandatory:*
      * A =C/C++= compiler ([[http://gcc.gnu.org][GNU compiler]] or Intel compiler work fine)
      * [[http://www.cmake.org][=CMake=]]
      * Cairo libraries

   * *Alsmot Mandatory:*
      * [[http://tiswww.case.edu/php/chet/readline/rltop.html][GNU Readline]]
      * [[http://trolltech.com/products][QT 4.4]] or newer development libraries

   * *Useful:*
      * [[http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.1/][OpenCV]]

Installation of gcc should be done by installing the
[[http://developer.apple.com/tools/xcode][the Apple developer tools]]. These tools should also
be available on you MacOS X installation DVD.

CMake can be retrieved from
[[http://www.cmake.org/HTML/Download.html][CMake website]] (you can take
the *DMG* installer). However, we found it was as simple to use
[[http://www.macports.org/][MacPorts]], which are necessary anyways for
Subversion and the Readline library. We recommend to avoid
[[http://finkproject.org/][Fink]], which tends to be always outdated. Assuming
you installed MacPorts, just do:
<verbatim>
sudo port install readline-5
sudo port install cmake
</verbatim>

For Cairo, the following is required:
<verbatim>
sudo port install cairo
</verbatim>

Note: you need CMake 2.6 or newer to compile Torch, so be sure you have
up-to-date ports beforehand with:
<verbatim>
sudo port sync
</verbatim>

For installing QT 4.4 you can also run
<verbatim>
sudo port install qt4-mac
</verbatim>
However, compiling QT 4.4 requires a good amount of time (a bit less than
2h on my Macbook Pro 2.4Ghz). If you cannot wait,
[[http://trolltech.com/downloads/opensource/appdev/mac-os-cpp][download]]
instead the binary *DMG* file available on [[http://trolltech.com][Trolltech website]]
and install it.

(a copy is also kept 
[[http://data.clement.farabet.net/qt/qt-mac-cocoa-opensource-4.5.3.dmg][here]], 
for max compatibility).

Finally, to get OpenCV, this works for SnowLeopard:
<verbatim>
sudo port install opencv +sl_64bit
</verbatim>

*B. Compiling and installing*

Compiling the entire =xLearn= framework, including =Lua=, =Torch5= and most 
packages is simply done with:
<verbatim>
make
</verbatim>
and then installed with:
<verbatim>
make install
</verbatim>
This last command might possibly be prefixed by =sudo= if you are
installing Torch in =/usr/local=.

To get all the details on how to activate/deactivate optional packages:
<verbatim>
make help
</verbatim>

In particular, if you're not root, you can install everything locally:
<verbatim>
make INSTALL_PREFIX=~/path/to/local install
</verbatim>

*C. Running*

Now Lua+Torch+xLearn should be installed in =/usr/local= or in =/my/install/path= if
you chose to use the =INSTALL_PREFIX= when installing.
Lua executables (=lua=, =qlua= and =luaX=) are found in the =bin= sub-directory of
these installation directories.
<verbatim>
/usr/local/bin/lua
Lua 5.1.3  Copyright (C) 1994-2008 Lua.org, PUC-Rio
> require 'torch'
> = torch.Tensor(5):zero()

0
0
0
0
0
[torch.Tensor of dimension 5]

> 
</verbatim>
For convenience, you might want to add to your =PATH= the path to lua
binaries. The executable =lua= is a simple Lua interpreter (as provided on
[[http://www.lua.org][Lua website]]), while =qlua= has enhanced
interactivity (like completion) and is able to handle graphics and QT
widgets. =luaX= is a full-blown matlab-like environment, with viewable
variable space, nice console, and editing facilities.
